package reportesv2;

import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Inventario extends javax.swing.JFrame {
    public Inventario() {
        initComponents();
    }
    
    double iva, precioIva, dineroTotal, cantidad;
    int contador=0, datoTabla, numeroDato;
    String contadorS="", ivaS, precioIvaS, dineroTotalS, dato, codigo;
    boolean error = false, llave = false;
    ResultSet rs=null;
    InsertarDatos insertarDato = new InsertarDatos();
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnInsertar = new javax.swing.JButton();
        cmbTabla = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        chkBuscar = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre del producto:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel2.setText("Cantidad:");

        jLabel3.setText("Precio sin iva/unidad");

        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        cmbTabla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar categoria", "Bebidas", "Abarrotes", "Medicina", "Libreria" }));
        cmbTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTablaActionPerformed(evt);
            }
        });

        jLabel4.setText("Id");

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.setEnabled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        chkBuscar.setText("Buscar");
        chkBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(txtId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(cmbTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnInsertar)))
                .addGap(74, 74, 74))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar)
                    .addComponent(chkBuscar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInsertar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agregar", jPanel2);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tiendita", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        //calculo del iva 
        //proviene de multiplicar el precio * el porcentaje del iva(13%)
        double precio;
        precio = Double.parseDouble(txtPrecio.getText());
        iva = precio * 0.13;
        ivaS = iva + "";
        //calculo del precio_con_iva/unidad
        //proviene de sumar el precio sin iva + el iva
        precioIva = precio + iva;
        precioIvaS = precioIva + "";
        //Calculo del dinero Total
        //proviene de multiplicar el costo unitario * cantidad de unidades (sin iva)
        cantidad = Double.parseDouble(txtCantidad.getText());
        dineroTotal = cantidad * precio;
        dineroTotalS = dineroTotal + "";

        //Obtener la informacion de la tabla a la cual insertar los datos e insertar los datos
        if (cmbTabla.getSelectedIndex() == 1) { //bebidas
            insertarDato.insertarBebida(contadorS, txtNombre.getText(), txtCantidad.getText(), txtPrecio.getText(), ivaS, precioIvaS, dineroTotalS);
            JOptionPane.showMessageDialog(null, "Dato insertado con exito");
            error = false;
            txtNombre.setText("");
            txtCantidad.setText("");
            txtPrecio.setText("");
            txtNombre.requestFocus();
            int id = Integer.parseInt(txtId.getText()) + 1;
            txtId.setText(id + "");
        } else if (cmbTabla.getSelectedIndex() == 2) { // abarroteria
            insertarDato.insertarAbarrote(contadorS, txtNombre.getText(), txtCantidad.getText(), txtPrecio.getText(), ivaS, precioIvaS, dineroTotalS);
            JOptionPane.showMessageDialog(null, "Dato insertado con exito");
            txtNombre.setText("");
            txtCantidad.setText("");
            txtPrecio.setText("");
            txtNombre.requestFocus();
            error = false;
            int id = Integer.parseInt(txtId.getText()) + 1;
            txtId.setText(id + "");
        } else if (cmbTabla.getSelectedIndex() == 3) { //medicina
            insertarDato.insertarMedicina(contadorS, txtNombre.getText(), txtCantidad.getText(), txtPrecio.getText(), ivaS, precioIvaS, dineroTotalS);
            JOptionPane.showMessageDialog(null, "Dato insertado con exito");
            txtNombre.setText("");
            txtCantidad.setText("");
            txtPrecio.setText("");
            txtNombre.requestFocus();
            error = false;
            int id = Integer.parseInt(txtId.getText()) + 1;
            txtId.setText(id + "");
        } else if (cmbTabla.getSelectedIndex() == 4) { // Libreria
            insertarDato.insertarLibreria(contadorS, txtNombre.getText(), txtCantidad.getText(), txtPrecio.getText(), ivaS, precioIvaS, dineroTotalS);
            JOptionPane.showMessageDialog(null, "Dato insertado con exito");
            txtNombre.setText("");
            txtCantidad.setText("");
            txtPrecio.setText("");
            txtNombre.requestFocus();
            error = false;
            int id = Integer.parseInt(txtId.getText()) + 1;
            txtId.setText(id + "");
        } else if (cmbTabla.getSelectedIndex() == 0) { //opcion default
            JOptionPane.showMessageDialog(null, "Favor seleccione una categoria", "MENSAJE DE ERROR", JOptionPane.ERROR_MESSAGE);
            error = true;
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void cmbTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTablaActionPerformed
        if (cmbTabla.getSelectedIndex() == 1) { //opcion bebidas
            try {
                rs = insertarDato.contarRegistrosBebidas();
                while (rs.next()) {
                    contador = rs.getInt(1);
                    if (contador != 0) {
                        contador = rs.getInt(1) + 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    } else {
                        contador = 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage(), "AVISO DEL SISTEMA", 0);
            }
        } else if (cmbTabla.getSelectedIndex() == 2) { //opcion abarrotes
            try {
                rs = insertarDato.contarRegistrosAbarrotes();
                while (rs.next()) {
                    contador = rs.getInt(1);
                    if (contador != 0) {
                        contador = rs.getInt(1) + 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    } else {
                        contador = 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage(), "AVISO DEL SISTEMA", 0);
            }
        } else if (cmbTabla.getSelectedIndex() == 3) { //opcion medicina
            try {
                rs = insertarDato.contarRegistrosMedicina();
                while (rs.next()) {
                    contador = rs.getInt(1);
                    if (contador != 0) {
                        contador = rs.getInt(1) + 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    } else {
                        contador = 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage(), "AVISO DEL SISTEMA", 0);
            }
        } else if (cmbTabla.getSelectedIndex() == 4) { //opcion libreria
            try {
                rs = insertarDato.contarRegistrosLibreria();
                while (rs.next()) {
                    contador = rs.getInt(1);
                    if (contador != 0) {
                        contador = rs.getInt(1) + 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    } else {
                        contador = 1;
                        contadorS = contador + "";
                        txtId.setText(contadorS);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage(), "AVISO DEL SISTEMA", 0);
            }
        }
        if (error == false) {
            txtNombre.setText("");
            txtCantidad.setText("");
            txtPrecio.setText("");
            txtNombre.requestFocus();
        }
        
    }//GEN-LAST:event_cmbTablaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        txtId.setEditable(false);
        if (!txtId.getText().isEmpty()) {
            rs = insertarDato.contarRegistrosBebidas();
            try {
                while (rs.next()) {
                    if (cmbTabla.getSelectedIndex() == 0) {
                        JOptionPane.showMessageDialog(null, "Favor seleccione categoria", "MENSAJE DE ERROR", JOptionPane.ERROR_MESSAGE);
                    } else if (cmbTabla.getSelectedIndex() == 1) { //bebidas
                        codigo = txtId.getText();
                        insertarDato.buscarBebidas(codigo);
                        llave = true;
                    } else if (cmbTabla.getSelectedIndex() == 2) {//Abarrotes
                        codigo = txtId.getText();
                        insertarDato.buscarAbarrotes(codigo);
                        llave = true;
                    } else if (cmbTabla.getSelectedIndex() == 3) {//Medicina
                        codigo = txtId.getText();
                        insertarDato.buscarMedicina(codigo);
                        llave = true;
                    } else if (cmbTabla.getSelectedIndex() == 4) {//Libreria
                        codigo = txtId.getText();
                        insertarDato.buscarLibreria(codigo);
                        llave = true;
                    }
                    if (llave == false){
                        JOptionPane.showMessageDialog(null, "Jugo no encontrado","MENSAJE DE ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                    llave = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR DEL SISTEMA "+e);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Favor ingrese el id a buscar", "MENSAJE DE ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void chkBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBuscarActionPerformed
        if(chkBuscar.isSelected()){
            txtId.setEditable(true);
            txtId.requestFocus();
            btnBuscar.setEnabled(true);
            txtNombre.setEnabled(false);
            txtCantidad.setEnabled(false);
            txtPrecio.setEnabled(false);
            btnInsertar.setEnabled(false);
        } else {
            txtId.setEditable(false);
            btnBuscar.setEnabled(false);
            txtNombre.setEnabled(true);
            txtCantidad.setEnabled(true);
            txtPrecio.setEnabled(true);
            btnInsertar.setEnabled(true);
        }
    }//GEN-LAST:event_chkBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JCheckBox chkBuscar;
    private javax.swing.JComboBox<String> cmbTabla;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
